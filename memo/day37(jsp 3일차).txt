day37


1. JSP 태그
	JSP에서 사용가능한 태그이며 다양한 기능을 지원하다 
	JSP 태그를 이용하여 HTML 내부에 자바 코드의 사용이 가능하지만 다른 언어가 섞이게 되면 유지보수, 가독성 측면에서 좋지 않기 때문에
	JSTL과 EL이 등장하였고 JSP 태그의 사용빈도가 낮아졌다
	
1) 지시작 태그 <%@ 지시자 %>
	지시자 종류 
	page : 페이지 속성을 지시하는 태그
	<%@ page language="java" ... %>

	include : 다른 파일의 내용을 포함시킨다
	<%@ include file="header.jsp" %>

	taglib : 태그 라이브러리를 지정한다
	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>


2) 선언태그 <%! ... %>
	변수, 메소드를 선언할 때 사용한다
	선언 태그 안에 만든 변수나 메소드는 해당 페이지 안에서 언제든 사용이 가능하다

3) 표현식 태그 <%= ... %>
	변수, 메소드의 결과 값을 출력할 때 사용한다

4) 스크립틀릿 태그 <% %>
	자바 코드를 삽입하기 위해 사용한다
	자바 코드를 자유롭게 사용할 수 있다

5) 주석 <%-- --%>
	JSP 주석은 컴파일 자체를 막아버린다
	일반 HTML 코드는 HTML 주석을 사용해도 되지만 JSP와 관련된 코드를 주석처리할 때는 반드시 JSP주석을 사용한다	

6) 액션태그 <jsp:action> </jsp:action>
	JSTL, EL의 등장으로 잘 사용되지 않는다
	액션태그를 너무 많이 사용하면 코드가 복잡하고 유지보수가 어렵다
	
2. JSTL과 EL
	JSP에서 자바코드를 대신하여 사용하며 외부 라이브러리이다
	서블릿에서 JSP로 기술이 발전했지만 여전히 HTML코드와 JAVA 코드가 같이 사용된다는 단점이 있다
	JSTL 태그와 EL 표현식을 사용하면 자바 코드를 대체하게 되어 태그로만 구성된 페이지를 만들 수 있다
	
1) JSTL 다운받기
	구글 > JSTL Download > 최상단 링크 클릭 > standard 1.1을 클릭
	> bianries 클릭 
	> jakarta-taglibs-standard-1.1.2.zip  933K   다운로드
	> jsp-resource 폴더에 압축풀기
	> 해당 프로젝트에 webapp > web-inf > lib 폴더로 crtl + v 하기 -> copy 안내 확인
	> 해당 프로젝트 클릭 후 build path - > configure
	> Libraries에서 classpath -> add jars -> lib 폴더 안에 넣은 두개의 파일을 추가
	> Order and Export -> select all로 apply and close 하면 끝

2) EL(Expressions Language)
	JSP에서 사용하는 표현 언어
	JSP에서 JAVA로 가져온 값을 간편하게 표현하는데 사용된다
	${}를 사용한다
	
	ex) <%= name %>  -> ${name}

3) 스코프(Scope)
	어떤 값이 유효한 영역, 범위를 의미

- page 스코프
	해당 JSP 페이지를 의미한다
	현재 페이지 내에서만 유효하다는 의미이다
	
	page 스코프를 변수 선언
	pageContext.setAttribute("name", "홍길동");
	
	page 스코프를 가진 변수 사용
	${name}

- request 스코프
	request에 저장된 데이터를 의미한다
	${requestScope.name}


-session 스코프
	세션에 저장된 데이트를 의미한다
	${sessionScope.name}	

- application 스코프
	어플리케이션 전체에서 사용 가능한 데이트를 의미한다
	${applicationScope.name}

- 값을 찾을 때 스코프를 명시하지 않으면 다음과 같은 순서를 찾는다
	page -> request -> session -> application

4) EL 연산자
산술연산자
	+, -, *, /, %, mod

논리연산자
	&&, and
	||, or
	!, not

비교 연산자
	>, gt
	<, lt
	>=, ge
	<=, le
	==, eq
	!=, ne

기타연산자	
	empty 

3. JSTL(Jsp Standard Tag Library)
	JSP 페이지에서 자주 사용되는 로직을 단순화하고 JAVA 코드를 줄이기 위해 제공되는 태그 라이브러리이다
	JSTL은 HTML, JSP 태그, JAVA코드의 혼합사용을 줄이고 가독성과 유지보수를 높여준다

1) JSTL의 사용방법
	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
	JSTL을 사용하기 위해서 JSP 페이지 상단에 코드한줄이 추가되어야한다

2) 태그의 종류
	<c:set> : 변수 선언
	<c:out> : 값 출력
	<c:if>	: 단순 if문
	<c:choose> : 여러조건문의 시작(if ~ elseif ~else)
	<c:when> : 조건문의 조건식을 작성(조건문의 else if를 의미)
	<c:otherwise> : 조건문의 else를 의미함
	<c:forEach> : 반복문

자바					jstl
	for(자료형 변수명 : 자료구조){}	<c:forEach var="" items="${}"> </c:forEach>
	for(초기식; 조건식; 증감식){}		<c:forEach var = "" begin= "" end = ""></c:forEach>

=========================================================================
DB 새로 연동하는 방법(Oracle 11g 제거 후  21c 새로 설치 - 이클립스 연결)
프로그램 추가제거 - Oracle Database 11g Express Edition 제거 -> remove 예 진행 
 - https://www.oracle.com/kr/database/technologies/xe-downloads.html 이동
 - Oracle Database 21c Express Edition for Windows x64 설치
 - jsp-resource 안에서 압축해제(반디집으로)
 - 관리자 권한으로 (마우스 우클릭) 실행 -setup.exe
 - 대상 폴더 변경 -> C:\oracle21c 로 변경
 - 비밀번호 -> 1234로 설정 -SYS, SYSTEM PDBADMIN 계정에서 사용
 - C드라이브 이동 -> oraclexe shift+del 하기 
 - oracle21c 이동 -> window + r -> cmd -> sqlplus 입력 21 버전 확인
 - sys as sysdba / 1234 입력
 - create user test identified by 1234;
 - alter session set "_ORACLE_SCRIPT"=true;
	세션이 변경되었습니다.
 - create user test identified by 1234;
	사용자가 생성되었습니다.
 - grant connect, resource, dba to test;
	권한이 부여되었습니다.
 -  SQL> conn test/1234;
	연결되었습니다.
    SQL> show user;
	USER은 "TEST"입니다

	SQL> create table tbl_member(member_id number, member_name varchar2(100));

	테이블이 생성되었습니다.

	SQL> create sequence seq_member;

	시퀀스가 생성되었습니다.

	SQL> insert into tbl_member values (seq_member.nextval, '짱구');

	1 개의 행이 만들어졌습니다.

	SQL> select * from tbl_member;

	디비버 D:\web_0900_sds\jsp_6\dbms 폴더 생성 후 연결
	
	새프로젝트 생성 - set active project
	
	DB 연결 - oracle - test/1234 입력 후 - test Connection 
	
	EDIT - Libraires 파일 전부 삭제 - add file - c드라이브 - oracle21c - dbhomeXE - jdbc - lib - ojdbc 11.jar ->ok 오류발생
	
	오류발생 -> Listener refused the connection with the following error:
ORA-12514, TNS:listener does not currently know of service requested in connect descriptor
  (CONNECTION_ID=Im3Ik8MiSuewXp0BXgOw2w==)

 window - e키 C:\oracle21c\homes\OraDB21Home1\network\admin 경로
 listenr.ora (메모장으로 연결/실행)
 -> 
# listener.ora Network Configuration File: C:\oracle21c\homes\OraDB21Home1\NETWORK\ADMIN\listener.ora
# Generated by Oracle configuration tools.

DEFAULT_SERVICE_LISTENER = XE

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = XE)
      (ORACLE_HOME = C:\oracle21c\dbhomeXE)
    )
    (SID_DESC =
      (SID_NAME = CLRExtProc)
      (ORACLE_HOME = C:\oracle21c\dbhomeXE)
      (PROGRAM = extproc)
      (ENVS = "EXTPROC_DLLS=ONLY:C:\oracle21c\dbhomeXE\bin\oraclr.dll")
    )
  )

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )
로 수정하기

cmd 다시 오픈 -> lsnrctl stop 명령어 실행
            -> lsnrctl start 다시 명령어 입력            

=========================================================================
※ Unkown hard error 시 확인 클릭 누르기
※ 그냥 생성시 : ORA-65096: 공통 사용자 또는 롤 이름이 부적합합니다. 오류 발생
==========================================================================



